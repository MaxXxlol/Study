<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0041)http://www.mechta34.com/it/qt4/qt001.html -->
<HTML><HEAD><TITLE>Ю.В.Земсков. Программирование на C++ с использованием библиотеки Qt4</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1251"><LINK 
href="Images/s1.css" type=text/css rel=stylesheet>
<META content="MSHTML 6.00.2900.2180" name=GENERATOR></HEAD>
<BODY>
<a href="qt000.htm">Назад</a> <a href="title.htm">Содержание</a> <a href="qt002.htm">Вперед</a>
<H2>Компиляция <I>Qt4</I> в системе Windows</H2><B>Предварительные условия:</B> 
<UL>
  <LI>для работы со свободной версией Qt4 должен быть установлен компилятор 
  MinGW (к сожалению, поддержка компилятора Microsoft C++ включена только в 
  коммерческие версии Qt); 
  <LI>путь к исполняемым файлам MinGW, находящимся в папке <CODE>bin</CODE>, 
  должен быть указан в системной переменной <CODE>PATH</CODE> (напоминаем, что 
  после редактирования значений переменных окружения требуется перезагрузить 
  компьютер, чтобы все изменения вступили в силу). </LI></UL><B>Порядок 
установки:</B> 
<UL>
  <LI>Если ставится коммерческая версия Qt, то имеющийся файл лицензии 
  скопируйте в каталог <CODE>Documents and Settings\ИмяПользователя</CODE> и 
  дайте ему имя <CODE>.qt-license</CODE>. 
  <LI>Распакуйте содержимое архива <CODE>qt-win-opensource-src-4.x.x.zip</CODE> 
  или <CODE>qt-win-commercial-src-4.2.2</CODE> в любой каталог, например, 
  <CODE>c:\qt422</CODE> (полное имя каталога не должно содержать пробелов). 
  <LI>Добавьте путь к каталогу <CODE>c:\qt422\bin</CODE> в системную переменную 
  <CODE>PATH</CODE>. Перезагрузите компьютер. 
  <LI>Перейдите в каталог <CODE>c:\qt422</CODE> и запустите программу 
  <CODE>configure.exe</CODE>. Если используется Visual Studio .NET, то 
  конфигурирование и компиляцию следует проводить в окне Visual Studio .NET 
  Command Prompt. При запуске <CODE>configure</CODE> могут быть указаны 
  параметры: 
  <UL>
    <LI><CODE>-platform x</CODE> -- платформа установки. Вместо <CODE>x</CODE> 
    можно указать <CODE>win32-g++</CODE>, а для коммерческих версий&nbsp;Qt: 
    <CODE>win32-icc</CODE>, <CODE>win32-msvc</CODE>, <CODE>win32-msvc.net</CODE> 
    и <CODE>win32-msvc2005</CODE>; 
    <LI><CODE>-release</CODE> -- собирать только конфигурацию Release (без 
    информации для отладки на уровне исходного текста); 
    <LI><CODE>-debug</CODE> -- собирать только конфигурацию Debug (с информацией 
    для отладчика); 
    <LI><CODE>-debug-and-release</CODE> -- собирать обе конфигурации; 
    <LI><CODE>-shared</CODE> -- собирать динамические библиотеки; 
    <LI><CODE>-static</CODE> -- собирать статические библиотеки; 
    <LI><CODE>-exceptions</CODE> -- использовать исключения; 
    <LI><CODE>-no-exceptions</CODE> -- не использовать исключения; 
    <LI><CODE>-no-qt3support</CODE> -- не компилировать модули поддержки старой 
    версии Qt3; 
    <LI><CODE>-fast</CODE> -- генерировать только те <CODE>make</CODE>-файлы, 
    которые необходимы для компиляции библиотеки; </LI></UL>и многие другие. 
  Полный список всех опций можно узнать, запустив <CODE>configure</CODE> с 
  параметром <CODE>-help</CODE>. 
  <LI>В результате работы <CODE>configure</CODE> будут сгенерированы make-файлы 
  для сборки библиотеки Qt, инструментов разработки и демонстрационных примеров. 
  Не выходя из каталога установки, запустите процесс компиляции с помощью 
  команды <CODE>mingw32-make</CODE> (или <CODE>make</CODE>, если используется 
  Visual&nbsp;C++) и приготовьтесь к длительному ожиданию (несколько часов); 
  <LI>Если ставилась коммерческая версия Qt, то установите интегратор с 
  Microsoft Visual Studio, для этого запустите на выполнение файл 
  <CODE>qt-vsintegration-1.2.1.exe</CODE>. </LI></UL>
<P>После компиляции библиотеки Qt4 в каталоге <CODE>bin</CODE> появятся 
следующие исполняемые файлы: 
<UL>
  <LI><CODE>qmake</CODE> -- утилита для создания файла проекта 
  <CODE>*.pro</CODE> и make-файлов; 
  <LI><CODE>assistant</CODE> -- программа просмотра документации; 
  <LI><CODE>designer</CODE> -- визуальный редактор графического интерфейса 
  пользователя; 
  <LI><CODE>moc</CODE> -- метакомпилятор, предназначенный для перевода исходных 
  текстов программ, написанных с использованием библиотеки Qt, на обычный язык 
  C++; 
  <LI><CODE>uic</CODE> -- компилятор <CODE>ui</CODE>-файлов, создаваемых 
  программой <CODE>designer</CODE>; 
  <LI><CODE>rcc</CODE> -- компилятор <CODE>qrc</CODE>-ресурсов; 
  <LI><CODE>qtdemo</CODE> -- оболочка для запуска демонстрационных программ; 
  <LI><CODE>linguist</CODE> -- инструмент, облегчающий перевод интерфейса 
  приложений на другие языки; 
  <LI><CODE>qt3to4</CODE> -- утилита для конвертации старых программ, 
  разработанных с использованием 3-й версии библиотеки; 
  <LI><CODE>lupdate</CODE>, <CODE>lrelease</CODE> -- утилиты для для 
  интернационализации приложений. </LI></UL>
<H2>Компиляция <I>Qt4</I> в Linux</H2>Поскольку библиотека Qt является основой 
для KDE, то, скорее всего, она уже установлена в вашей системе. Но даже в этом 
случае могут отсутствовать некоторые средства разработки, т.к. в KDevelop 
используются свои собственные инструменты. Кроме того, обычно вместе с 
дистрибутивом Linux распространяются не самые свежие версии Qt. 
<P><B>Предварительные условия:</B> 
<UL>
  <LI>должен быть установлен компилятор g++ или icc. </LI></UL>
<P><B>Порядок установки:</B> 
<UL>
  <LI>Распакуйте содержимое архива 
  <CODE>qt-x11-opensource-src-4.x.x.tar.gz</CODE> в какой-нибудь временный 
  каталог: <PRE>cd /tmp
gunzip qt-x11-opensource-4.x.x.tar.gz
tar xvf qt-x11-opensource-4.x.x.tar
</PRE>
  <LI>Перейдите в этот каталог и запустите <CODE>configure</CODE>: <PRE>cd /tmp/qt-x11-opensource-4.x.x
./configure
</PRE>
  <P>При необходимости разрешается задать параметры сборки, список которых можно 
  узнать, если при запуске <CODE>configure</CODE> указать ключ 
  <CODE>-help</CODE>; </P>
  <LI>Не выходя из каталога установки, запустите процесс компиляции с помощью 
  команды <CODE>make</CODE> и приготовьтесь к длительному ожиданию; 
  <LI>Для копирования всех необходимых файлов в системные каталоги дайте команду 
<PRE>su -c "make install"
</PRE>и введите пароль суперпользователя; 
  <LI>добавьте в переменную окружения <CODE>PATH</CODE> путь к исполняемым 
  файлам и библиотекам Qt. Для этого в случае использования оболочек bash, ksh, 
  zsh или sh требуется в файл <CODE>.profile</CODE> добавить строки: <PRE>PATH=/usr/local/Qt4/bin:$PATH
export PATH
</PRE>Для csh и tcsh: <PRE>setenv PATH /usr/local/Qt4/bin:$PATH
</PRE></LI>
</UL>
<a href="qt000.htm">Назад</a> <a href="title.htm">Содержание</a> <a href="qt002.htm">Вперед</a>
</BODY></HTML>
